<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.auth.dao.resc.RescDAO">
  <resultMap id="BaseResultMap" type="com.coderman.auth.model.resc.RescModel">
    <id column="resc_id" jdbcType="INTEGER" property="rescId" />
    <result column="resc_name" jdbcType="VARCHAR" property="rescName" />
    <result column="resc_url" jdbcType="VARCHAR" property="rescUrl" />
    <result column="resc_domain" jdbcType="VARCHAR" property="rescDomain" />
    <result column="method_type" jdbcType="VARCHAR" property="methodType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resc_id, resc_name, resc_url, resc_domain, method_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.coderman.auth.model.resc.RescExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_resc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_resc
    where resc_id = #{rescId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_resc
    where resc_id = #{rescId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coderman.auth.model.resc.RescExample">
    delete from auth_resc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coderman.auth.model.resc.RescModel">
    insert into auth_resc (resc_id, resc_name, resc_url, 
      resc_domain, method_type, create_time, 
      update_time)
    values (#{rescId,jdbcType=INTEGER}, #{rescName,jdbcType=VARCHAR}, #{rescUrl,jdbcType=VARCHAR}, 
      #{rescDomain,jdbcType=VARCHAR}, #{methodType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.coderman.auth.model.resc.RescModel">
    insert into auth_resc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rescId != null">
        resc_id,
      </if>
      <if test="rescName != null">
        resc_name,
      </if>
      <if test="rescUrl != null">
        resc_url,
      </if>
      <if test="rescDomain != null">
        resc_domain,
      </if>
      <if test="methodType != null">
        method_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rescId != null">
        #{rescId,jdbcType=INTEGER},
      </if>
      <if test="rescName != null">
        #{rescName,jdbcType=VARCHAR},
      </if>
      <if test="rescUrl != null">
        #{rescUrl,jdbcType=VARCHAR},
      </if>
      <if test="rescDomain != null">
        #{rescDomain,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null">
        #{methodType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coderman.auth.model.resc.RescExample" resultType="java.lang.Long">
    select count(*) from auth_resc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update auth_resc
    <set>
      <if test="record.rescId != null">
        resc_id = #{record.rescId,jdbcType=INTEGER},
      </if>
      <if test="record.rescName != null">
        resc_name = #{record.rescName,jdbcType=VARCHAR},
      </if>
      <if test="record.rescUrl != null">
        resc_url = #{record.rescUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.rescDomain != null">
        resc_domain = #{record.rescDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.methodType != null">
        method_type = #{record.methodType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update auth_resc
    set resc_id = #{record.rescId,jdbcType=INTEGER},
      resc_name = #{record.rescName,jdbcType=VARCHAR},
      resc_url = #{record.rescUrl,jdbcType=VARCHAR},
      resc_domain = #{record.rescDomain,jdbcType=VARCHAR},
      method_type = #{record.methodType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coderman.auth.model.resc.RescModel">
    update auth_resc
    <set>
      <if test="rescName != null">
        resc_name = #{rescName,jdbcType=VARCHAR},
      </if>
      <if test="rescUrl != null">
        resc_url = #{rescUrl,jdbcType=VARCHAR},
      </if>
      <if test="rescDomain != null">
        resc_domain = #{rescDomain,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null">
        method_type = #{methodType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where resc_id = #{rescId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coderman.auth.model.resc.RescModel">
    update auth_resc
    set resc_name = #{rescName,jdbcType=VARCHAR},
      resc_url = #{rescUrl,jdbcType=VARCHAR},
      resc_domain = #{rescDomain,jdbcType=VARCHAR},
      method_type = #{methodType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where resc_id = #{rescId,jdbcType=INTEGER}
  </update>


  <!-- 用户列表 -->
  <select id="page" resultMap="BaseResultMap" resultType="com.coderman.auth.vo.resc.RescVO">
    select
    <include refid="Base_Column_List" />
    from auth_resc
    <where>
      <if test="queryVO.rescUrl!=null and queryVO.rescUrl!=''">
        and resc_url like concat('%',#{queryVO.rescUrl},'%')
      </if>
      <if test="queryVO.rescName!=null and queryVO.rescName!=''">
        and resc_name like concat('%',#{queryVO.rescName},'%')
      </if>
      <if test="queryVO.rescDomain!=null and queryVO.rescDomain!=''">
        and resc_domain  = #{queryVO.rescDomain}
      </if>
      <if test="queryVO.methodType!=null and queryVO.methodType!=''">
        and method_type  = #{queryVO.methodType}
      </if>
    </where>
    order by create_time desc
  </select>

  <select id="selectByKeyword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from auth_resc
    <where>
      <if test="keyword!=null and keyword!=''">
        and (resc_name like concat('%',#{keyword},'%') or resc_url like concat('%',#{keyword},'%') )
      </if>
    </where>
  </select>


  <select id="selectRescListByUsername" resultType="com.coderman.auth.vo.resc.RescVO">
      SELECT
       DISTINCT
          r2.resc_id as rescId,
          r2.resc_url as rescUrl,
          r2.method_type as methodType
      FROM
          auth_user u
          INNER JOIN auth_user_role ur ON u.user_id = ur.user_id
          INNER JOIN auth_role r ON ur.role_id = r.role_id
          INNER JOIN auth_role_func rf ON r.role_id = rf.role_id
          INNER JOIN auth_func f ON rf.func_id = f.func_id
          INNER JOIN auth_func_resc fr ON fr.func_id = f.func_id
          INNER JOIN auth_resc r2 ON r2.resc_id = fr.resc_id
      WHERE
          u.username = #{username}
  </select>
</mapper>